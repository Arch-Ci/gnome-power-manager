AC_PREREQ(2.52)

AC_INIT(gnome-power-manager, 0.3.3)
AC_CONFIG_SRCDIR(src)
AM_INIT_AUTOMAKE(AC_PACKAGE_NAME, AC_PACKAGE_VERSION)
AM_CONFIG_HEADER(config.h)

AC_PROG_CC
AC_PROG_INSTALL
AM_PROG_LIBTOOL
AC_PROG_INTLTOOL([0.27.2])

GNOME_COMPILE_WARNINGS
GNOME_DOC_INIT

dnl ---------------------------------------------------------------------------
dnl - Extra verbose warning switches
dnl ---------------------------------------------------------------------------
#CPPFLAGS="$CPPFLAGS -ansi -Wall -Werror"

dnl ---------------------------------------------------------------------------
dnl - Debugging switches (uncomment this if you want to use gdb)
dnl ---------------------------------------------------------------------------
#CPPFLAGS="$CPPFLAGS -g"

dnl ---------------------------------------------------------------------------
dnl - Supported languages
dnl ---------------------------------------------------------------------------
GETTEXT_PACKAGE=AC_PACKAGE_NAME
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE(GETTEXT_PACKAGE, "AC_PACKAGE_NAME", [foo])

dnl Add the languages here.
ALL_LINGUAS="bg de en_CA en_GB es fi fr gl hu it ja lt mk nb nl no pa pl sk sv th uk zh_CN"
AC_SUBST(ALL_LINGUAS)
AM_GLIB_GNU_GETTEXT

dnl ---------------------------------------------------------------------------
dnl - Library dependencies
dnl ---------------------------------------------------------------------------
GLIB_REQUIRED=2.6.0
GTK_REQUIRED=2.6.0
LIBGNOME_REQUIRED=2.10.0
LIBGNOMEUI_REQUIRED=2.10.0
HAL_REQUIRED=0.5.6
DBUS_REQUIRED=0.50
LIBGLADE_REQUIRED=2.5.0
LIBNOTIFY_REQUIRED=0.2.2
LIBWNCK_REQUIRED=2.10.0

dnl ---------------------------------------------------------------------------
dnl - Make above strings available for packaging files (e.g. rpm spec files)
dnl ---------------------------------------------------------------------------
AC_SUBST(GLIB_REQUIRED)
AC_SUBST(GTK_REQUIRED)
AC_SUBST(LIBGNOME_REQUIRED)
AC_SUBST(LIBGNOMEUI_REQUIRED)
AC_SUBST(HAL_REQUIRED)
AC_SUBST(DBUS_REQUIRED)
AC_SUBST(LIBGLADE_REQUIRED)
AC_SUBST(LIBNOTIFY_REQUIRED)
AC_SUBST(LIBWNCK_REQUIRED)

dnl ---------------------------------------------------------------------------
dnl - Check library dependencies
dnl ---------------------------------------------------------------------------
PKG_CHECK_MODULES(GLIB, glib-2.0 >= $GLIB_REQUIRED gobject-2.0)
AC_SUBST(GLIB_CFLAGS)
AC_SUBST(GLIB_LIBS)

PKG_CHECK_MODULES(HAL, hal >= $HAL_REQUIRED)
AC_SUBST(HAL_CFLAGS)
AC_SUBST(HAL_LIBS)

PKG_CHECK_MODULES(DBUS, \
 dbus-glib-1 >= $DBUS_REQUIRED \
 dbus-1 >= $DBUS_REQUIRED \
 gthread-2.0)
AC_SUBST(DBUS_CFLAGS)
AC_SUBST(DBUS_LIBS)

PKG_CHECK_MODULES(GNOME, \
 libgnomeui-2.0 >= $LIBGNOMEUI_REQUIRED \
 libglade-2.0 >= $LIBGLADE_REQUIRED \
 libwnck-1.0 >= $LIBWNCK_REQUIRED \
 gtk+-2.0 >= $GTK_REQUIRED)
AC_SUBST(GNOME_CFLAGS)
AC_SUBST(GNOME_LIBS)

AC_PATH_PROG(GCONFTOOL, gconftool-2)
AM_GCONF_SOURCE_2

dnl ---------------------------------------------------------------------------
dnl - Make paths available for source files
dnl ---------------------------------------------------------------------------
AC_SUBST(SYSCONFDIR, $sysconfdir)
AC_SUBST(DATADIR, $datadir)
AC_SUBST(BINDIR, $bindir)
AC_SUBST(SBINDIR, $sbindir)

dnl ---------------------------------------------------------------------------
dnl - Where should we put documentation ?
dnl ---------------------------------------------------------------------------
AC_ARG_WITH(doc-dir,
              [AC_HELP_STRING([--with-doc-dir=<dir>],
              [directory to install documentation])])
if ! test -z "$with_doc_dir"; then
   DOCDIR="$with_doc_dir/gnome-power-manager-$VERSION"
else
   DOCDIR="$DATADIR/doc/gnome-power-manager-$VERSION"
fi
AC_SUBST(DOCDIR)

dnl ---------------------------------------------------------------------------
dnl - Should we build Doxygen documentation ?
dnl ---------------------------------------------------------------------------
AC_ARG_ENABLE(doxygen-docs,
              [AC_HELP_STRING([--enable-doxygen-docs],
                              [build DOXYGEN documentation (requires Doxygen) [default=no]])],,
              [enable_doxygen_docs=no])
AC_PATH_PROG(DOXYGEN, doxygen, no)
AC_MSG_CHECKING([whether to build Doxygen documentation])
if test x$DOXYGEN = xno ; then
    have_doxygen=no
else
    have_doxygen=yes
fi
if test x$enable_doxygen_docs = xauto ; then
    if test x$have_doxygen = xno ; then
        enable_doxygen_docs=no
    else
        enable_doxygen_docs=yes
    fi
fi
if test x$enable_doxygen_docs = xyes; then
    if test x$have_doxygen = xno; then
	AC_MSG_ERROR([Building Doxygen docs explicitly required, but Doxygen not found])
    fi
fi
AM_CONDITIONAL(DOXYGEN_DOCS_ENABLED, test x$enable_doxygen_docs = xyes)
AC_MSG_RESULT(yes)

dnl ---------------------------------------------------------------------------
dnl - Are we specifying a different dbus root ?
dnl ---------------------------------------------------------------------------
AC_ARG_WITH(dbus-sys,
              [AC_HELP_STRING([--with-dbus-sys=<dir>],
              [where D-BUS system.d directory is])])
AC_ARG_WITH(dbus-services,
              [AC_HELP_STRING([--with-dbus-services=<dir>],
              [where D-BUS services directory is])])
if ! test -z "$with_dbus_sys" ; then
	DBUS_SYS_DIR="$with_dbus_sys"
else
	DBUS_SYS_DIR="$SYSCONFDIR/dbus-1/system.d"
fi
if ! test -z "$with_dbus_services" ; then
	DBUS_SERVICES_DIR="$with_dbus_services"
else
	# D-BUS 0.23 and higher use $prefix/share/dbus-1/services
	DBUS_SERVICES_DIR="$DATADIR/dbus-1/services"
fi
AC_SUBST(DBUS_SYS_DIR)
AC_SUBST(DBUS_SERVICES_DIR)

dnl ---------------------------------------------------------------------------
dnl - Is libnotify available?
dnl ---------------------------------------------------------------------------
AC_ARG_ENABLE(libnotify,
              [AC_HELP_STRING([--enable-libnotify],
                              [build with libnotify support [default=auto]])],,
              [enable_libnotify=auto])
if test x$enable_libnotify = xno ; then
    have_libnotify=no;
else
    # See if we have sufficiently new libnotify library
    PKG_CHECK_MODULES(LIBNOTIFY, libnotify >= $LIBNOTIFY_REQUIRED, have_libnotify=yes, have_libnotify=no)
    if test x$enable_libnotify = xauto ; then
        if test x$have_libnotify = xno ; then
                AC_MSG_WARN([Sufficiently new libnotify library not found])
        fi
    else 
        if test x$have_libnotify = xno ; then
                AC_MSG_ERROR([libnotify explicitly required, and sufficiently new libnotify library not found])
        fi
    fi
fi
AM_CONDITIONAL(HAVE_LIBNOTIFY, test x$have_libnotify = xyes)
if test x$have_libnotify = xyes ; then
    AC_DEFINE(HAVE_LIBNOTIFY,1,[libnotify support])
    AC_SUBST(LIBNOTIFY_CFLAGS)
    AC_SUBST(LIBNOTIFY_LIBS)
fi

dnl ---------------------------------------------------------------------------
dnl - Is docbook2man available?
dnl ---------------------------------------------------------------------------
AC_PATH_PROG(DOCBOOK2MAN, docbook2man, no)
if test "$DOCBOOK2MAN" = "no" ; then
	AC_MSG_WARN([docbook2man not found, will not be able to build man documentation])
	fi
AM_CONDITIONAL(HAVE_DOCBOOK2MAN, [test "$DOCBOOK2MAN" != "no"])

dnl ---------------------------------------------------------------------------
dnl - Makefiles, etc.
dnl ---------------------------------------------------------------------------
AC_OUTPUT([
Makefile
src/Makefile
src/icons/Makefile
docs/Makefile
docs/man/Makefile
docs/Doxyfile
po/Makefile.in
gnome-power-manager.spec
])

dnl ==========================================================================
echo "
                    GNOME Power Manager $VERSION
                  =============================

        prefix:                    ${prefix}
        compiler:                  ${CC}
        cflags:                    ${CFLAGS}
        libnotify support:         ${have_libnotify}
        building Doxygen docs:     ${enable_doxygen_docs}
        documentation dir:         $DOCDIR
        dbus-1 system.d dir:       $DBUS_SYS_DIR
        dbus-1 services dir:       $DBUS_SERVICES_DIR
	gconf-schema dir:          $GCONF_SCHEMA_FILE_DIR
"
